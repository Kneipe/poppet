#!/bin/sh
# postinst script for poppet

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# source debconf library
. /usr/share/debconf/confmodule

CONFFILE=/usr/share/nginx/poppet/instance/config.py
INSTALLDIR=/usr/share/nginx/poppet

case "$1" in

  configure)
    db_get poppet/mysql-host && MYSQLHOST=${RET}
    db_get poppet/mysql-root-user  && MYSQLUSER=${RET}
    db_get poppet/mysql-root-pass && MYSQLPASS=${RET}
    db_get poppet/mysql-db-name && MYSQLDB=${RET}

    cd $INSTALLDIR

    if [ ! -d $INSTALLDIR/instance ]; then
        mkdir -p $INSTALLDIR/instance
        echo '-------------------------Creating instance folder-----------------------------------------'
    fi
    if [ ! -d $INSTALLDIR/logs ]; then
        mkdir -p $INSTALLDIR/logs
        echo '-------------------------Creating logs folder-----------------------------------------'
    fi

    if [ ! -d $INSTALLDIR/unifispot/static/uploads/ ]; then
        mkdir -p $INSTALLDIR/unifispot/static/uploads/
        echo '-------------------------Creating uploads folder-----------------------------------------'
    fi
    if [ ! -f $INSTALLDIR/instance/__init__.py ]; then
        /bin/touch $INSTALLDIR/instance/__init__.py
        echo '-------------------------Creating instance/__init__.py file--------------------------------'
    fi

    if [ ! -f $INSTALLDIR/instance/config.py ]; then
        /bin/cp $INSTALLDIR/scripts/instance_sample.py $INSTALLDIR/instance/config.py
        echo '-------------------------Creating instance/config.py file--------------------------------'
        sed -i "s/^SQLALCHEMY_DATABASE_URI.*/SQLALCHEMY_DATABASE_URI=\"mysql:\/\/$MYSQLUSER:$MYSQLPASS@$MYSQLHOST\/$MYSQLDB\"/g"  $CONFFILE
    fi
    if ! mysql -u$MYSQLUSER -p$MYSQLPASS -h$MYSQLHOST  -e 'use '$MYSQLDB; then
        echo " Trying to create a new Db named $MYSQLDB"
        mysql -u$MYSQLUSER -p$MYSQLPASS -h$MYSQLHOST -e "create database "$MYSQLDB;
    fi

    if [ ! -f $INSTALLDIR/.env/bin/activate ]; then
        pip install virtualenv
        virtualenv $INSTALLDIR/.env

    fi

    $INSTALLDIR/.env/bin/pip install -r $INSTALLDIR/requirements.txt

    if [ ! -d $INSTALLDIR/migrations ]; then
        echo '-------------------------No migrations folder found,initializing DB-------------------------'
        cd $INSTALLDIR
        $INSTALLDIR/.env/bin/python $INSTALLDIR/manage.py db init

    fi
    $INSTALLDIR/.env/bin/python $INSTALLDIR/manage.py db migrate
    $INSTALLDIR/.env/bin/python $INSTALLDIR/manage.py db upgrade
    $INSTALLDIR/.env/bin/python $INSTALLDIR/manage.py init_data
    $INSTALLDIR/.env/bin/python $INSTALLDIR/manage.py rebuild_daily_stat
    $INSTALLDIR/.env/bin/python $INSTALLDIR/manage.py migrate_vouchers


    if [  -d /etc/init/uwsgi.conf ]; then
        echo '-------------Upstart UWSGI config found, removing and upgrading to supervisor--------------'
        if service --status-all | grep -Fq 'uwsgi'; then
          sudo service uwsgi stop
        fi
        rm -rf /etc/init/uwsgi.conf

    fi

    if [ ! -d /etc/uwsgi ]; then
        echo '-------------------------Creating /etc/uwsgi-----------------------------------------'
        mkdir /etc/uwsgi

    fi
    if [ ! -d /etc/uwsgi/vassals ]; then
        echo '-------------------------Creating /etc/uwsgi/vassals-----------------------------------------'        
        mkdir /etc/uwsgi/vassals
        ln -sf /usr/share/nginx/poppet/scripts/uwsgi.ini /etc/uwsgi/vassals/uwsgi.ini

    fi

    if [ ! -f /etc/uwsgi/vassals/uwsgi.ini ]; then
        echo '-------------------------Configuring /etc/uwsgi/vassals/uwsgi.ini-----------------------------'
        ln -sf /usr/share/nginx/poppet/scripts/uwsgi.ini /etc/uwsgi/vassals/uwsgi.ini

    fi
    if [ ! -f /etc/nginx/sites-enabled/wifiapp ]; then
        echo '-------------------------Configuring nGINX-----------------------------------------'
        rm -rf /etc/nginx/sites-enabled/default
        cp /usr/share/nginx/poppet/scripts/wifiapp.conf /etc/nginx/sites-available/wifiapp.conf
        ln -sf /etc/nginx/sites-available/wifiapp.conf /etc/nginx/sites-enabled/wifiapp
    fi

    if [ ! -f /etc/supervisor/conf.d/unifispot_celery.conf ]; then
        echo '-------------------------Configuring celeryd-----------------------------------------'
        ln -sf /usr/share/nginx/poppet/scripts/supervisord.conf  /etc/supervisor/conf.d/unifispot_celery.conf
    fi

    chown -R www-data:www-data /usr/share/nginx/poppet
    service nginx restart
    service supervisor restart

  ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    exit 0
  ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;

esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop

exit 0
         